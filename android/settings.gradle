// settings.gradle
pluginManagement {
    includeBuild(new File([
        "node", "--print",
        "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })"
    ].execute(null, rootDir).text.trim()).getParentFile().toString())
}
plugins {
    id("com.facebook.react.settings")
}

extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->
    if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {
        ex.autolinkLibrariesFromCommand()
    } else {
        def command = [
            'node',
            '--no-warnings',
            '--eval',
            'require(require.resolve("expo-modules-autolinking", { paths: [require.resolve("expo/package.json")] }))(process.argv.slice(1))',
            '--json',
            '--platform',
            'android'
        ].toList()
        ex.autolinkLibrariesFromCommand(command)
    }
}

rootProject.name = 'devcheck'

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
    // repositoriesMode.set(RepositoriesMode.PREFER_PROJECT_REPOS)
    repositories {
        maven {
            url 'https://api.mapbox.com/downloads/v2/releases/maven'
            credentials {
                username = 'mapbox'
                password = providers.gradleProperty('MAPBOX_DOWNLOADS_TOKEN').orNull
            }
        }
        google()
        mavenCentral()
        maven { url 'https://www.jitpack.io' }
    }


    versionCatalogs {
        reactAndroidLibs {
            from(files(new File([
                "node", "--print",
                "require.resolve('react-native/package.json')"
            ].execute(null, rootDir).text.trim(), "../gradle/libs.versions.toml")))
        }
    }
}

apply from: new File([
    "node", "--print",
    "require.resolve('expo/package.json')"
].execute(null, rootDir).text.trim(), "../scripts/autolinking.gradle")
useExpoModules()

include ':app'
includeBuild(new File([
    "node", "--print",
    "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })"
].execute(null, rootDir).text.trim()).getParentFile())




// pluginManagement {
//     includeBuild(new File(["node", "--print", "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })"].execute(null, rootDir).text.trim()).getParentFile().toString())
// }
// plugins { id("com.facebook.react.settings") }

// extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->
//   if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {
//     ex.autolinkLibrariesFromCommand()
//   } else {
//     def command = [
//       'node',
//       '--no-warnings',
//       '--eval',
//       'require(require.resolve(\'expo-modules-autolinking\', { paths: [require.resolve(\'expo/package.json\')] }))(process.argv.slice(1))',
//       'react-native-config',
//       '--json',
//       '--platform',
//       'android'
//     ].toList()
//     ex.autolinkLibrariesFromCommand(command)
//   }
// }

// rootProject.name = 'devcheck'

// dependencyResolutionManagement {
 
//   // Add MapBox MAven. âœ… This allows downloading Mapbox SDK.
//   // repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
//   repositoriesMode.set(RepositoriesMode.PREFER_PROJECT_REPOS)
//   repositories {
//         maven {
//             url 'https://api.mapbox.com/downloads/v2/releases/maven'
//             credentials {
//                 username = 'mapbox'
//                 // password = System.getenv("MAPBOX_DOWNLOADS_TOKEN") ?: ""
//                 password = providers.gradleProperty('MAPBOX_DOWNLOADS_TOKEN').orNull // To Read token from gradle.properties

//             }
//         }
//         google()
//         mavenCentral()
//     }
//   //--------------------  MapBox Maven Ends  -------------------->>

//   versionCatalogs {
//     reactAndroidLibs {
//       from(files(new File(["node", "--print", "require.resolve('react-native/package.json')"].execute(null, rootDir).text.trim(), "../gradle/libs.versions.toml")))
//     }
//   }
// }

// apply from: new File(["node", "--print", "require.resolve('expo/package.json')"].execute(null, rootDir).text.trim(), "../scripts/autolinking.gradle");
// useExpoModules()

// include ':app'
// includeBuild(new File(["node", "--print", "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })"].execute(null, rootDir).text.trim()).getParentFile())
